@model PaginatedList<SuperMammoth.Models.Transaction>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Transaction History</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Add Funds</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by Transaction Type: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Date</a>
            </th>
            <th>
                Value
            </th>
            <th>
                Balance
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TransactionTypeIdSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Transaction type</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.Raw(item.Date.ToString("dd/MM/yyyy"))
                </td>
                <td>
                    @switch (item.TransactionTypeId)
                    {
                        case 1:
                            <span style="color:red;">@Html.Raw(item.Value.ToString("C"))</span>
                            break;
                        case 2:
                        case 3:
                            <span style="color:green;">@Html.Raw(item.Value.ToString("C"))</span>
                            break;
                    }
                    
                </td>
                <td>
                    @Html.Raw(item.Balance.ToString("C"))
                </td>
                <td>
                    @switch (item.TransactionTypeId)
                    {
                        case 1:
                            <span style="color:red;">@item.TransactionType.Name</span>
                            break;
                        case 2:
                        case 3:
                            <span style="color:green;">@item.TransactionType.Name</span>
                             break;
                    }

                </td>
    


        </tr>
        }
    </tbody>
</table>
@{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next - @(Model.PageIndex)/@(Model.TotalPages)
</a>
